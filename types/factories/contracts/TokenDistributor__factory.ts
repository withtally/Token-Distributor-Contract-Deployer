/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TokenDistributor,
  TokenDistributorInterface,
} from "../../contracts/TokenDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "contract ERC20Votes",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_totalClaimable",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_claimPeriodStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_claimPeriodEnd",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_delegateTo",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_y",
        type: "uint256",
      },
    ],
    name: "NotGreaterThan",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NullAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenDistributor_AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenDistributor_ClaimPeriodEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenDistributor_ClaimPeriodNotEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenDistributor_ClaimPeriodNotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenDistributor_FailedMerkleProofVerify",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenDistributor_ZeroAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "AddAuthorization",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "RemoveAuthorization",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sweepReceiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Swept",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "addAuthorization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "authorizedAccounts",
    outputs: [
      {
        internalType: "uint256",
        name: "_authorized",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "authorizedAccounts",
    outputs: [
      {
        internalType: "address[]",
        name: "_accounts",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "canClaim",
    outputs: [
      {
        internalType: "bool",
        name: "_claimable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "claimAndDelegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimPeriodEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimPeriodStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "removeAuthorization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sweepReceiver",
        type: "address",
      },
    ],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ERC20Votes",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200133e3803806200133e8339810160408190526200003491620002b2565b33620000408162000132565b5060028690556200005a6001600160a01b038616620001a0565b600380546001600160a01b0319166001600160a01b03929092169190911790556200008584620001ce565b600455620000948342620001f2565b6005819055620000a6908390620001f2565b6006556003546001600160a01b0390811690635c19a95c90620000cb908416620001a0565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b1580156200010d57600080fd5b505af115801562000122573d6000803e3d6000fd5b5050505050505050505062000317565b6200013f6000826200022c565b1562000184576040516001600160a01b03821681527f599a298163e1678bb1c676052a8930bf0b8a1261ed6e01b8a2391e55f70001029060200160405180910390a150565b604051633013e93f60e11b815260040160405180910390fd5b50565b60006001600160a01b038216620001ca5760405163e99d5ac560e01b815260040160405180910390fd5b5090565b600081600003620001ca57604051630e5a744960e41b815260040160405180910390fd5b6000818311620002235760405163130ac85760e21b8152600481018490526024810183905260440160405180910390fd5b50815b92915050565b600062000243836001600160a01b0384166200024a565b9392505050565b6000818152600183016020526040812054620002935750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000226565b50600062000226565b6001600160a01b03811681146200019d57600080fd5b60008060008060008060c08789031215620002cc57600080fd5b865195506020870151620002e0816200029c565b8095505060408701519350606087015192506080870151915060a087015162000309816200029c565b809150509295509295509295565b61101780620003276000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80634838ed1911610097578063c884ef8311610066578063c884ef83146101d4578063ebf0c717146101f7578063f3fef3a314610200578063fc0c546a1461021357600080fd5b80634838ed191461019c57806348f02917146101a557806358c13b7e146101b857806394f3f81d146101c157600080fd5b80632e391876116100d35780632e3918761461015857806335b281531461016d5780633b439351146101805780633da082a01461019357600080fd5b806301681a62146100fa57806310895da51461010f57806324ba588414610137575b600080fd5b61010d610108366004610d1a565b61023e565b005b61012261011d366004610d81565b61035f565b60405190151581526020015b60405180910390f35b61014a610145366004610d1a565b610376565b60405190815260200161012e565b610160610393565b60405161012e9190610ddd565b61010d61017b366004610d1a565b6103a4565b61010d61018e366004610e2a565b6103d5565b61014a60065481565b61014a60045481565b61010d6101b3366004610e76565b6103e5565b61014a60055481565b61010d6101cf366004610d1a565b61047e565b6101226101e2366004610d1a565b60076020526000908152604090205460ff1681565b61014a60025481565b61010d61020e366004610f08565b6104ac565b600354610226906001600160a01b031681565b6040516001600160a01b03909116815260200161012e565b61024733610527565b610263576040516282b42960e81b815260040160405180910390fd5b600654421161028557604051630a5ee1d560e21b815260040160405180910390fd5b6003546040516370a0823160e01b81523060048201526000916102fe9183916001600160a01b0316906370a0823190602401602060405180830381865afa1580156102d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f89190610f32565b90610539565b600354909150610318906001600160a01b03168383610571565b604080516001600160a01b0384168152602081018390527fc36b5179cb9c303b200074996eab2b3473eac370fdd7eba3bec636fe3510969691015b60405180910390a15050565b600061036d858585856105d8565b95945050505050565b600061038182610527565b1561038e57506001919050565b919050565b606061039f6000610626565b905090565b6103ad33610527565b6103c9576040516282b42960e81b815260040160405180910390fd5b6103d28161063a565b50565b6103e08383836106a3565b505050565b6103f08888886106a3565b60035460405163061e6d2960e51b81526001600160a01b038781166004830152600060248301526044820187905260ff861660648301526084820185905260a482018490529091169063c3cda5209060c401600060405180830381600087803b15801561045c57600080fd5b505af1158015610470573d6000803e3d6000fd5b505050505050505050505050565b61048733610527565b6104a3576040516282b42960e81b815260040160405180910390fd5b6103d281610734565b6104b533610527565b6104d1576040516282b42960e81b815260040160405180910390fd5b6003546104e8906001600160a01b03168383610571565b604080516001600160a01b0384168152602081018390527f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59101610353565b60006105338183610796565b92915050565b600081831161056a5760405163130ac85760e21b815260048101849052602481018390526044015b60405180910390fd5b5090919050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526103e09084906107b8565b60006105e261081b565b80156105ee5750600082115b801561061357506001600160a01b03831660009081526007602052604090205460ff16155b801561036d575061036d85858585610834565b60606000610633836108c2565b9392505050565b61064560008261091e565b1561068a576040516001600160a01b03821681527f599a298163e1678bb1c676052a8930bf0b8a1261ed6e01b8a2391e55f7000102906020015b60405180910390a150565b604051633013e93f60e11b815260040160405180910390fd5b6106ae838383610933565b336000908152600760205260408120805460ff19166001179055600480548392906106da908490610f61565b90915550506003546106f6906001600160a01b03163383610571565b60408051338152602081018390527fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a910160405180910390a1505050565b61073f6000826109f4565b1561077d576040516001600160a01b03821681527f8834a87e641e9716be4f34527af5d23e11624f1ddeefede6ad75a9acfc31b9039060200161067f565b60405163ea8e4eb560e01b815260040160405180910390fd5b6001600160a01b03811660009081526001830160205260408120541515610633565b60006107cd6001600160a01b03841683610a09565b905080516000141580156107f25750808060200190518101906107f09190610f74565b155b156103e057604051635274afe760e01b81526001600160a01b0384166004820152602401610561565b6000600554421015801561039f57505060065442111590565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009081906054016040516020818303038152906040528051906020012090506108b8868680806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506002549150849050610a17565b9695505050505050565b60608160000180548060200260200160405190810160405280929190818152602001828054801561091257602002820191906000526020600020905b8154815260200190600101908083116108fe575b50505050509050919050565b6000610633836001600160a01b038416610a2d565b60055442101561095657604051633f8e359760e01b815260040160405180910390fd5b60065442111561097957604051630bb96e4b60e21b815260040160405180910390fd5b8060000361099a5760405163b0c276dd60e01b815260040160405180910390fd5b3360009081526007602052604090205460ff16156109cb57604051637148a62f60e01b815260040160405180910390fd5b6109d783833384610834565b6103e05760405163daf1730b60e01b815260040160405180910390fd5b6000610633836001600160a01b038416610a7c565b606061063383836000610b6f565b600082610a248584610c02565b14949350505050565b6000818152600183016020526040812054610a7457508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610533565b506000610533565b60008181526001830160205260408120548015610b65576000610aa0600183610f61565b8554909150600090610ab490600190610f61565b9050808214610b19576000866000018281548110610ad457610ad4610f96565b9060005260206000200154905080876000018481548110610af757610af7610f96565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610b2a57610b2a610fac565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610533565b6000915050610533565b606081471015610b945760405163cd78605960e01b8152306004820152602401610561565b600080856001600160a01b03168486604051610bb09190610fc2565b60006040518083038185875af1925050503d8060008114610bed576040519150601f19603f3d011682016040523d82523d6000602084013e610bf2565b606091505b50915091506108b8868383610c4f565b600081815b8451811015610c4757610c3382868381518110610c2657610c26610f96565b6020026020010151610cab565b915080610c3f81610ff1565b915050610c07565b509392505050565b606082610c6457610c5f82610cda565b610633565b8151158015610c7b57506001600160a01b0384163b155b15610ca457604051639996b31560e01b81526001600160a01b0385166004820152602401610561565b5080610633565b6000818310610cc7576000828152602084905260409020610633565b6000838152602083905260409020610633565b805115610cea5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b038116811461038e57600080fd5b600060208284031215610d2c57600080fd5b61063382610d03565b60008083601f840112610d4757600080fd5b50813567ffffffffffffffff811115610d5f57600080fd5b6020830191508360208260051b8501011115610d7a57600080fd5b9250929050565b60008060008060608587031215610d9757600080fd5b843567ffffffffffffffff811115610dae57600080fd5b610dba87828801610d35565b9095509350610dcd905060208601610d03565b9396929550929360400135925050565b6020808252825182820181905260009190848201906040850190845b81811015610e1e5783516001600160a01b031683529284019291840191600101610df9565b50909695505050505050565b600080600060408486031215610e3f57600080fd5b833567ffffffffffffffff811115610e5657600080fd5b610e6286828701610d35565b909790965060209590950135949350505050565b60008060008060008060008060e0898b031215610e9257600080fd5b883567ffffffffffffffff811115610ea957600080fd5b610eb58b828c01610d35565b90995097505060208901359550610ece60408a01610d03565b945060608901359350608089013560ff81168114610eeb57600080fd5b979a969950949793969295929450505060a08201359160c0013590565b60008060408385031215610f1b57600080fd5b610f2483610d03565b946020939093013593505050565b600060208284031215610f4457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561053357610533610f4b565b600060208284031215610f8657600080fd5b8151801515811461063357600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6000825160005b81811015610fe35760208186018101518583015201610fc9565b506000920191825250919050565b60006001820161100357611003610f4b565b506001019056fea164736f6c6343000814000a";

type TokenDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenDistributor__factory extends ContractFactory {
  constructor(...args: TokenDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _root: BytesLike,
    _token: AddressLike,
    _totalClaimable: BigNumberish,
    _claimPeriodStart: BigNumberish,
    _claimPeriodEnd: BigNumberish,
    _delegateTo: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _root,
      _token,
      _totalClaimable,
      _claimPeriodStart,
      _claimPeriodEnd,
      _delegateTo,
      overrides || {}
    );
  }
  override deploy(
    _root: BytesLike,
    _token: AddressLike,
    _totalClaimable: BigNumberish,
    _claimPeriodStart: BigNumberish,
    _claimPeriodEnd: BigNumberish,
    _delegateTo: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _root,
      _token,
      _totalClaimable,
      _claimPeriodStart,
      _claimPeriodEnd,
      _delegateTo,
      overrides || {}
    ) as Promise<
      TokenDistributor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenDistributor__factory {
    return super.connect(runner) as TokenDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenDistributorInterface {
    return new Interface(_abi) as TokenDistributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenDistributor {
    return new Contract(address, _abi, runner) as unknown as TokenDistributor;
  }
}
